using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace DataEncoding
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Gimme some text!");
            string text = Console.ReadLine();

            ulong privateKey = (ulong)Math.Pow(2, 10) - 25;  // 16 bit prime (technically 10 bit, but block size and all that)

            // This is how a public key would be generated by someone else
            ulong publicKey = ExampleEncryption.BigPow(ExampleEncryption.generator, (ulong)Math.Pow(2, 9) - 13);
            
            FileDataEncoder encoder = new FileDataEncoder(Encoding.ASCII.GetBytes(text)) 
            {
                EncryptionAlgorithm = new ExampleEncryption(privateKey, publicKey) 
            };

            Console.WriteLine("Here's your message data in Base64:");

            ConsoleColor defaultTextColor = Console.ForegroundColor;
            Console.ForegroundColor = Console.BackgroundColor == ConsoleColor.White ? ConsoleColor.DarkGreen : ConsoleColor.Green;

            Console.WriteLine(encoder.Base64String);

            Console.ForegroundColor = defaultTextColor;

            Console.WriteLine("Press enter to continue....");
            Console.ReadLine();

            Console.WriteLine("Beggining the Encryption process...");
            encoder.Encrypt();

            Console.WriteLine("Encryption complete!\n" +
                "_________________________________\n" +
                "Here's the encyrpted message in plain-text as well as Base64.");

            ConsoleColor temp = Console.ForegroundColor;

            Console.ForegroundColor = Console.BackgroundColor == ConsoleColor.White ? ConsoleColor.DarkBlue : ConsoleColor.Blue;
            Console.WriteLine("{0}\n{1}", encoder, encoder.Base64String);
            Console.ForegroundColor = defaultTextColor;

            Console.WriteLine("Press enter to continue...");
            Console.ReadLine();

            // This is simulating the recipents side of this conversation now.  
            // We reset the encryption algorithm so that it is in the inital state
            // in a two party conversation, you would not need to do this because
            // the recipent has not used the algorithm to generate the random bits
            // that we did here to /encrypt/ the message.
            encoder.EncryptionAlgorithm.Reset();

            Console.WriteLine("Beginning Decryption...");
            encoder.Decrypt();
            
            Console.WriteLine("Decryption complete!  And here is the decrypted message:");

            Console.ForegroundColor = Console.BackgroundColor == ConsoleColor.White ? ConsoleColor.DarkGreen : ConsoleColor.Green;
            Console.WriteLine(encoder);
            
            Console.ReadLine();
        }
    }
}
